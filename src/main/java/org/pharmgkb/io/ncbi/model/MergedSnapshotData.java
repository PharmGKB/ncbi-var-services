/*
 * Variation Services
 * Services for variation data processing<p> <div style=\"font-size:1.1em;font-weight:normal\">NOTE: This service is still in beta testing mode. Please limit your request rate to 1 request/second.  dbSNP provides bulk download in VCF and JSON on the <a href=\"ftp://ftp.ncbi.nih.gov/snp/latest_release/\">FTP site</a> for users with a large number of RefSNPs (>100K) to process.</div> 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: variation-services@ncbi.nlm.nih.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.pharmgkb.io.ncbi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Data specific to merged snapshots; cannot be present at the same time as primary_snapshot_data or nosnppos_snapshot_data
 */
@Schema(description = "Data specific to merged snapshots; cannot be present at the same time as primary_snapshot_data or nosnppos_snapshot_data")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-25T10:32:24.325-07:00[America/Los_Angeles]")public class MergedSnapshotData {

  @SerializedName("proxy_time")
  private String proxyTime = null;

  @SerializedName("proxy_build_id")
  private String proxyBuildId = null;

  @SerializedName("merged_into")
  private List<String> mergedInto = new ArrayList<String>();
  public MergedSnapshotData proxyTime(String proxyTime) {
    this.proxyTime = proxyTime;
    return this;
  }

  

  /**
  * The date and time this RefSnp was merged
  * @return proxyTime
  **/
  @Schema(example = "2001-01-15T00:00Z", required = true, description = "The date and time this RefSnp was merged")
  public String getProxyTime() {
    return proxyTime;
  }
  public void setProxyTime(String proxyTime) {
    this.proxyTime = proxyTime;
  }
  public MergedSnapshotData proxyBuildId(String proxyBuildId) {
    this.proxyBuildId = proxyBuildId;
    return this;
  }

  

  /**
  * The number of the dbSNP build in which this RefSnp was merged
  * @return proxyBuildId
  **/
  @Schema(required = true, description = "The number of the dbSNP build in which this RefSnp was merged")
  public String getProxyBuildId() {
    return proxyBuildId;
  }
  public void setProxyBuildId(String proxyBuildId) {
    this.proxyBuildId = proxyBuildId;
  }
  public MergedSnapshotData mergedInto(List<String> mergedInto) {
    this.mergedInto = mergedInto;
    return this;
  }

  public MergedSnapshotData addMergedIntoItem(String mergedIntoItem) {
    this.mergedInto.add(mergedIntoItem);
    return this;
  }

  /**
  * The RefSnp id(s) that this RefSnp was merged into. In dbsnp1 a RefSnp can only be merged into one RefSnp; however in dbsnp2 it is possible to merge into multiple RefSnps.
  * @return mergedInto
  **/
  @Schema(required = true, description = "The RefSnp id(s) that this RefSnp was merged into. In dbsnp1 a RefSnp can only be merged into one RefSnp; however in dbsnp2 it is possible to merge into multiple RefSnps.")
  public List<String> getMergedInto() {
    return mergedInto;
  }
  public void setMergedInto(List<String> mergedInto) {
    this.mergedInto = mergedInto;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MergedSnapshotData mergedSnapshotData = (MergedSnapshotData) o;
    return Objects.equals(this.proxyTime, mergedSnapshotData.proxyTime) &&
        Objects.equals(this.proxyBuildId, mergedSnapshotData.proxyBuildId) &&
        Objects.equals(this.mergedInto, mergedSnapshotData.mergedInto);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(proxyTime, proxyBuildId, mergedInto);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MergedSnapshotData {\n");
    
    sb.append("    proxyTime: ").append(toIndentedString(proxyTime)).append("\n");
    sb.append("    proxyBuildId: ").append(toIndentedString(proxyBuildId)).append("\n");
    sb.append("    mergedInto: ").append(toIndentedString(mergedInto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

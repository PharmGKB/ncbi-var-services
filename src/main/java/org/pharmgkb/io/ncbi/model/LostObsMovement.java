/*
 * Variation Services
 * Services for variation data processing<p> <div style=\"font-size:1.1em;font-weight:normal\">NOTE: This service is still in beta testing mode. Please limit your request rate to 1 request/second.  dbSNP provides bulk download in VCF and JSON on the <a href=\"ftp://ftp.ncbi.nih.gov/snp/latest_release/\">FTP site</a> for users with a large number of RefSNPs (>100K) to process.</div> 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: variation-services@ncbi.nlm.nih.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.pharmgkb.io.ncbi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.pharmgkb.io.ncbi.model.Spdi;
import org.pharmgkb.io.ncbi.model.SupportId;

/**
 * For recording the movement of an observation that was in this RefSNP in the previous release, but no longer in the current
 */
@Schema(description = "For recording the movement of an observation that was in this RefSNP in the previous release, but no longer in the current")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-25T10:32:24.325-07:00[America/Los_Angeles]")public class LostObsMovement {

  @SerializedName("component_ids")
  private List<SupportId> componentIds = new ArrayList<SupportId>();

  @SerializedName("observation")
  private Spdi observation = null;

  @SerializedName("allele_in_cur_release")
  private Spdi alleleInCurRelease = null;

  @SerializedName("rsids_in_cur_release")
  private List<String> rsidsInCurRelease = new ArrayList<String>();

  @SerializedName("allele_in_prev_release")
  private Spdi alleleInPrevRelease = null;
  public LostObsMovement componentIds(List<SupportId> componentIds) {
    this.componentIds = componentIds;
    return this;
  }

  public LostObsMovement addComponentIdsItem(SupportId componentIdsItem) {
    this.componentIds.add(componentIdsItem);
    return this;
  }

  /**
  * DbSnpIds of the supporting data where this particular observation is found (SubSnpId, ClinVarSnpId, etc.)
  * @return componentIds
  **/
  @Schema(required = true, description = "DbSnpIds of the supporting data where this particular observation is found (SubSnpId, ClinVarSnpId, etc.)")
  public List<SupportId> getComponentIds() {
    return componentIds;
  }
  public void setComponentIds(List<SupportId> componentIds) {
    this.componentIds = componentIds;
  }
  public LostObsMovement observation(Spdi observation) {
    this.observation = observation;
    return this;
  }

  

  /**
  * Get observation
  * @return observation
  **/
  @Schema(required = true, description = "")
  public Spdi getObservation() {
    return observation;
  }
  public void setObservation(Spdi observation) {
    this.observation = observation;
  }
  public LostObsMovement alleleInCurRelease(Spdi alleleInCurRelease) {
    this.alleleInCurRelease = alleleInCurRelease;
    return this;
  }

  

  /**
  * Get alleleInCurRelease
  * @return alleleInCurRelease
  **/
  @Schema(required = true, description = "")
  public Spdi getAlleleInCurRelease() {
    return alleleInCurRelease;
  }
  public void setAlleleInCurRelease(Spdi alleleInCurRelease) {
    this.alleleInCurRelease = alleleInCurRelease;
  }
  public LostObsMovement rsidsInCurRelease(List<String> rsidsInCurRelease) {
    this.rsidsInCurRelease = rsidsInCurRelease;
    return this;
  }

  public LostObsMovement addRsidsInCurReleaseItem(String rsidsInCurReleaseItem) {
    this.rsidsInCurRelease.add(rsidsInCurReleaseItem);
    return this;
  }

  /**
  * The ids of the RefSnps that contain this observation in the current release.  Only identity alleles can belong to more than one RefSnp, so this can only have more than one entry if the observation maps to the identity allele. If empty then this observation no longer is associated with any id (which can only occur if it is suppressed or withdrawn (or if there is a bug)).
  * @return rsidsInCurRelease
  **/
  @Schema(required = true, description = "The ids of the RefSnps that contain this observation in the current release.  Only identity alleles can belong to more than one RefSnp, so this can only have more than one entry if the observation maps to the identity allele. If empty then this observation no longer is associated with any id (which can only occur if it is suppressed or withdrawn (or if there is a bug)).")
  public List<String> getRsidsInCurRelease() {
    return rsidsInCurRelease;
  }
  public void setRsidsInCurRelease(List<String> rsidsInCurRelease) {
    this.rsidsInCurRelease = rsidsInCurRelease;
  }
  public LostObsMovement alleleInPrevRelease(Spdi alleleInPrevRelease) {
    this.alleleInPrevRelease = alleleInPrevRelease;
    return this;
  }

  

  /**
  * Get alleleInPrevRelease
  * @return alleleInPrevRelease
  **/
  @Schema(required = true, description = "")
  public Spdi getAlleleInPrevRelease() {
    return alleleInPrevRelease;
  }
  public void setAlleleInPrevRelease(Spdi alleleInPrevRelease) {
    this.alleleInPrevRelease = alleleInPrevRelease;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LostObsMovement lostObsMovement = (LostObsMovement) o;
    return Objects.equals(this.componentIds, lostObsMovement.componentIds) &&
        Objects.equals(this.observation, lostObsMovement.observation) &&
        Objects.equals(this.alleleInCurRelease, lostObsMovement.alleleInCurRelease) &&
        Objects.equals(this.rsidsInCurRelease, lostObsMovement.rsidsInCurRelease) &&
        Objects.equals(this.alleleInPrevRelease, lostObsMovement.alleleInPrevRelease);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(componentIds, observation, alleleInCurRelease, rsidsInCurRelease, alleleInPrevRelease);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LostObsMovement {\n");
    
    sb.append("    componentIds: ").append(toIndentedString(componentIds)).append("\n");
    sb.append("    observation: ").append(toIndentedString(observation)).append("\n");
    sb.append("    alleleInCurRelease: ").append(toIndentedString(alleleInCurRelease)).append("\n");
    sb.append("    rsidsInCurRelease: ").append(toIndentedString(rsidsInCurRelease)).append("\n");
    sb.append("    alleleInPrevRelease: ").append(toIndentedString(alleleInPrevRelease)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
